@model IEnumerable<Review>
@using Movies.Web.Models
@using Movies.Domain.Models
@using Movies.Infrastructure.Data
@using Microsoft.AspNetCore.Identity
@inject UserManager<ApplicationUser> UserManager
@inject SignInManager<ApplicationUser> SignInManager

@{
    var reviews = this.Model.Count();
}
@*<h2>Reviews</h2>
    <h2>@reviews</h2>*@
<dd>
    <div class="comments-container">
        @if (Model.Count() != 0)
        {
            @foreach (var review in Model)
            {
                <div class="comment-main-level">
                    <div class="comment-box">
                        <div class="comment-head">
                            <h6 class="comment-name by-author"><a>User: @Html.DisplayFor(modelItem => UserManager.FindByIdAsync(review.UserID).Result.Email)</a></h6>
                            <span>@Html.DisplayFor(modelItem => review.PostedOn) | rating: @Html.DisplayFor(modelItem => review.Rating) <a class="fa fa-star checked"></a> </span>
                        </div>
                        <div class="comment-content wrap">
                            <a>@Html.DisplayFor(modelItem => review.Content)</a>
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="row justify-content-center">
                <p>No comments yet! Be first!</p>
            </div>
        }
    </div>
</dd>